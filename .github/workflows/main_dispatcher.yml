name: Monorepo CI Dispatcher

on:
  push:
    branches: [ main, deploydb ]
  pull_request:
    branches: [ main, deploydb ]

jobs:
  # 1. Job สำหรับตรวจสอบการเปลี่ยนแปลง (Filter Job)
  filter_paths:
    runs-on: ubuntu-latest
    outputs:
      frontend_changed: ${{ steps.filter.outputs.frontend }}
      backend_changed: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for changed paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            frontend:
              - 'Vue-APP/**'
            backend:
              - 'GO-APP/**'

  # 2. Job สำหรับเรียก Backend CI (Reusable Workflow Call)
  backend_ci:
    needs: filter_paths # ระบุการขึ้นต่อกัน
    if: ${{ needs.filter_paths.outputs.backend_changed == 'true' }} # ตรวจสอบ Output
    uses: smootysmart/mono-repo-test/.github/workflows/go-app_ci.yml@main
    with:
      tag: latest
    secrets: 
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  # 3. Job สำหรับเรียก Frontend CI (Reusable Workflow Call)
  frontend_ci:
    needs: filter_paths
    if: ${{ needs.filter_paths.outputs.frontend_changed == 'true' }} 
    uses: smootysmart/mono-repo-test/.github/workflows/vue-app_ci.yml@main
    with:
      tag: latest
      
    secrets: 
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  database_cd:
    needs: filter_paths
    if: ${{ vars.DEPLOYDB == 'true' }}
    runs-on: self-hosted
    steps:
      - name: Checkout code 
        uses: actions/checkout@v4
      
      - name: Deploy MongoDB
        run: docker compose -f docker-compose.yml up mongodb -d

      - name: Deploy MinIO
        run: docker compose -f docker-compose.yml up minio -d

  backend_cd:
    needs: backend_ci
    if: ${{ needs.filter_paths.outputs.backend_changed == 'true' }}
    uses: smootysmart/mono-repo-test/.github/workflows/go-app_cd.yml@main
    with:
      tag: latest
      
    secrets: 
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  frontend_cd:
    needs: frontend_ci
    if: ${{ needs.filter_paths.outputs.frontend_changed == 'true' }}
    uses: smootysmart/mono-repo-test/.github/workflows/vue-app_cd.yml@main
    with:
      tag: latest
      
    secrets: 
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}