version: '3.8'
services:

  reverse-proxy:
    image: nginx:latest
    container_name: reverse-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      # - ./nginx/certs:/etc/nginx/certs
    networks:
      - ${ENV}-network
      - ${ENV}-database-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    networks:
      - ${ENV}-database-network
    volumes:
      - ${ENV}-mongo_data:/data/db
  
  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - ${ENV}-database-network
    volumes:
      - ${ENV}-minio_data:/data

  backend:
    restart: always
    image: smootysmart/backend:${TAG}
    container_name: backend
    ports:
      - "${BACKEND_PORT}:8080"
    env_file:
      - /home/smart/mono-repo-test/.env.${ENV}
    networks:
      - ${ENV}-network
      - ${ENV}-database-network

  frontend:
    restart: always
    image: smootysmart/frontend:${TAG}
    container_name: frontend
    ports:
      - "3000:3000"
    env_file:
      - /home/smart/mono-repo-test/.env.${ENV}
    networks:
      - ${ENV}-network

volumes:
  prod-mongodb_data:
  prod-minio_data:
  dev-mongo_data:
  dev-minio_data:
  uat-mongo_data:
  uat-minio_data:

networks:
  ${ENV}-network:
    driver: bridge
  ${ENV}-database-network:
    driver: bridge