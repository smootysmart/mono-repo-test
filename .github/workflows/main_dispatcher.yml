name: Monorepo CI Dispatcher

on:
  # push:
  #   branches: [ main, deploydb ]
  pull_request:
    branches: [ main, deploydb ]

jobs:
  # 1. Job สำหรับตรวจสอบการเปลี่ยนแปลง (Filter Job)
  filter_paths:
    runs-on: ubuntu-latest
    outputs:
      frontend_changed: ${{ steps.filter.outputs.frontend }}
      backend_changed: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for changed paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            frontend:
              - 'Vue-APP/**'
            backend:
              - 'GO-APP/**'

  database_cd:
    needs: filter_paths
    # if: ${{ github.env.DEPLOY_DB == 'true' }}
    runs-on: self-hosted
    steps:
      - name: Checkout code 
        uses: actions/checkout@v4
      
      - name: Deploy MongoDB
        run: docker compose up -f docker-compose.yml mongodb -d
        

  # 2. Job สำหรับเรียก Backend CI (Reusable Workflow Call)
  backend_ci:
    needs: filter_paths # ระบุการขึ้นต่อกัน
    if: ${{ needs.filter_paths.outputs.backend_changed == 'true' }} # ตรวจสอบ Output
    uses: smootysmart/mono-repo-test/.github/workflows/go-app_ci.yml@main
    with:
      tag: ${{ github.sha }}
      
    # Secrets ต้องส่งผ่าน 'secrets:' block (หาก Workflow ย่อยต้องการ)
    secrets: 
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  # 3. Job สำหรับเรียก Frontend CI (Reusable Workflow Call)
  frontend_ci:
    needs: filter_paths
    if: ${{ needs.filter_paths.outputs.frontend_changed == 'true' }} 
    uses: smootysmart/mono-repo-test/.github/workflows/vue-app_ci.yml@main
    with:
      tag: ${{ github.sha }}
      
    secrets: 
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}


  backend_cd:
    needs: backend_ci
    if: ${{ needs.filter_paths.outputs.backend_changed == 'true' }}
    runs-on: self-hosted
    steps:
      - name: Checkout code 
        uses: actions/checkout@v4
      - name: pull image from docker hub
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}
      
      - name: where am i and images
        run: |
              ls -la
              docker images

      - name: create env for git sha
        run: echo "TAG=${{ github.sha }}" > .env
      - name: Deploy Backend
        run: docker compose up backend -d

      # - name: remove .env
      #   run: rm .env
      
      - name: remove unused images
        run: docker image prune -a -f

  frontend_cd:
    needs: frontend_ci
    if: ${{ needs.filter_paths.outputs.frontend_changed == 'true' }} # ตรวจสอบ Output
    runs-on: self-hosted
    steps:
      - name: Checkout code 
        uses: actions/checkout@v4
      
      - name: pull image from docker hub
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}

      - name: where am i and images
        run: |
              ls -la
              docker images
      - name: create env for git sha
        run: echo "TAG=${{ github.sha }}" > .env
      - name: Deploy Frontend
        run: docker compose up -d frontend

      # - name: remove .env
      #   run: rm .env

      - name: remove unused images
        run: docker image prune -a -f