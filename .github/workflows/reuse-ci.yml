name: Reusable CI Workflow

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      tagvue:
        required: true
        type: string
      taggo:
        required: true
        type: string
    secrets:
        DOCKER_USERNAME:
            required: true
        DOCKER_PASSWORD:
            required: true

jobs:
  vue-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build
        working-directory: ./Vue-APP

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
            context: .
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}:${{ inputs.tagvue }}

      # - name: Deploy to environment
      #   if: ${{ inputs.env == 'production' }}
      #   run: echo "Deploying to production environment"

  go-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.25'

      - name: Install dependencies
        run: go mod tidy

      - name: Build project
        run: go build -o server .
        working-directory: ./GO-APP

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
            context: .
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}:${{ inputs.taggo }}

      # - name: Deploy to environment
      #   if: ${{ inputs.env == 'production' }}
      #   run: echo "Deploying to production environment"